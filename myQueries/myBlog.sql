--FINAL PROJECT DATABASE
--PROJECT NAME: PERSONAL BLOG

USE master;
GO

IF EXISTS(SELECT * FROM SYS.DATABASES WHERE NAME = 'myBlog')
DROP DATABASE myBlog;
GO

--IF EXISTS(SELECT * FROM SYS.DATABASES WHERE NAME = 'myBlog_Archives')
--DROP DATABASE myBlog_Archives;
--GO

CREATE DATABASE myBlog;
GO

--CREATE DATABASE myBlog_Archives;
--GO

USE myBlog;
GO

CREATE TABLE Post
(
	POST_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY, --PK
	TITLE NVARCHAR(255),
	POST_BODY NVARCHAR(MAX),
	POST_AUTHOR NVARCHAR(255),
	P_DATE_TIME DATETIME
);

CREATE TABLE Comments
(
	COMMENT_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY, --PK
	USERNAME NVARCHAR(255),
	USER_EMAIL NVARCHAR(255),
	COMMENT_BODY NVARCHAR(MAX),
	C_DATE_TIME DATETIME,

	C_POST_ID INT NOT NULL, --FK
	FOREIGN KEY(C_POST_ID) REFERENCES Post(POST_ID) ON DELETE CASCADE
);

CREATE TABLE Tags
(
	TAG_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY, --PK
	TAG_NAME NVARCHAR(50)
);

CREATE TABLE PostTags
(
	POST_ID INT NOT NULL,
	TAG_ID INT NOT NULL,

	FOREIGN KEY(POST_ID) REFERENCES dbo.Post(POST_ID) ON DELETE CASCADE,
	FOREIGN KEY(TAG_ID) REFERENCES dbo.Tags(TAG_ID) ON DELETE CASCADE
);

CREATE TABLE Admins
(
	ADMIN_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY, --PK
	ADMIN_NAME NVARCHAR(50),
	ADMIN_EMAIL NVARCHAR(50),
	ADMIN_PASSWORD NVARCHAR(255)
);

--WORK IN PROGRESS, ARCHIVE. THERE ARE TWO WAYS YOU CAN WORK ON ARCHIVE,
--TODO: YOU CAN DO EITHER ONE OF EITHER. CREATE A COPY OF THE ENTIRE DATABASE IN TO THE ARCHIVE. EXCEPT FOR THE ADMIN.
--CREATE A STORED PROCEDURE THAT WILL RUN WHEN A CERTAIN DATE IS HIT.
--CREATE A BUTTON THAT ALLOWS YOU TO SEND ALL THE DATA IN TO AN ARCHIVE.

--SELECT * INTO dbo.Archives FROM Post AS P INNER JOIN Comments AS C 
--ON C.C_POST_ID = P.POST_ID;

----SELECT *  FROM myBlog_Archives.dbo.Archives

----SELECT TITLE, POST_BODY, POST_AUTHOR, P_DATE_TIME, TAG_NAME, USERNAME, USER_EMAIL, COMMENT_BODY, C_DATE_TIME  FROM myBlog_Archives.dbo.Archives

